要求：1.添加注释	调整格式	优化代码
	2.做好总结	项目笔记【每个模块都要写】
	3.按照模块备份项目源码
	
day1采集模块
		采集模块整体思路：新建一个Gather采集接口的具体实现类GatherImpl	实现gather()采集方法
		采集监测点本地文件的数据
		
		分步实现：
			建立IO流对象，关联本地文件
			逐行读取文件内容
			拆分每一行数据，额外提取第四项，第七项
			根据第四项，处理第七项，得到实际采集值
			将采集到一条完整信息封装，得到一个类对象，如何添加到集合
			返回集合
		遇到的问题
		如何解决
		考察点：	将16进制的String转换成int
				将16进制的String转换成long 
				隐式类型 显式类型转换
				拆分字符串
				Timestamp的使用


*************************

day2网络传输模块	单线程（一对一）	多线程（多个子线程）
	整体思路：建一个ServerImpl实现类  重写Server接口的方法
		        建一个ClientImpl实现类  重写Client接口的方法
		        建一个DBStoreImpl实现类  重写DBStore的方法
	ServerImpl类    {
		实例化Server对象
		接收客户端的连接
		获取操作流
		关闭服务器，释放资源
	}
	
	ClientImpl类    {
		搭建一个客户端
		获取流对象
		封装成对象流
		发送coll到服务器
	}
	
	DBStoreImpl类    {
		数据库连接四要素【驱动driver   url[ip port]  用户  密码】（实际开发中写入配置文件中，用户可自行改变）
		注册驱动【源码装入内存】
		建立数据库连接
		获取一个PrepareStatement对象
		填入？值，执行sql语句
		释放资源
	}
	
	ClientMain() {
		采集数据
		传输数据
	}
	
	ServerMain() {
		启动服务器接收数据
		输出list集合中成员的个数
		将接收到的数据入库
	}
	
		遇到问题：Client客户端	采集数据时	多态的使用
		如何解决：复习多态的使用方法		Gather g = new GatherImpl();父类引用指向子类对象	
	数据库入库模块
		同构    ps
		事务管理（jdbc 默认一次提交一个事务）-->手动提交事务（提交事务与批处理没有关系，不冲突）
		批处理	提高效率
		四要素	新建一个jdbc.properties文件
				在DBStoreImpl中	静态代码块	对静态成员初始化
				1.实例化一个Properties对象
				2.载入load本地文件
				3.获取本地配置文件属性值
		建表		create table 表名{属性	类型(范围),...}
		
****************************

day3备份模块
实际应用场景：
	气象站
	采集点
	发送到气象站【服务器】
	
	整体思路：首先建一个BackupImpl类  重写Backup的方法
		        在BackupImpl类中把对象写入到文件中
		        在src下新建一个backUp目录【Folder】
		        在DBStoreImpl类中写备份模块1
		       在BackupImpl类中
		       	完成备份功能，将集合中剩余数据写入本地文件中
		                      从备份文件中提取有效数据到集合中并返回
		        	将object集合与coll合并【bList.addAll(coll);】
		                      删除备份文件
	分步实现：
	备份模块1（场景1）：模拟异常	将尚未入库的数据全部保存到本地文件
		1.在入库过程中如果出现异常，则跳转到catch代码块中去执行
		2.获取尚未入库的对象，存放在一个集合中
		3.将集合对象备份到本地文件中
	备份模块2（场景2）：不需要产生异常
		第二次启动服务器，接收完客户端发送的集合后，开始入库
		入库之前先要从备份文件中提取上次尚未入库的集合对象
		先进行写入，然后再写入本次接收到的数据
	
	具体解决方案：
		场景1的备份：
			事务回滚，输出提示语句
			1.获取实际入库的数据个数count
				一共400条数据，现在执行到231条，出现异常  则实际写入数据个数count==200
			2.将尚未入库的数据提取出来，放入noList集合
				List.subList(,);
			3.将尚未入库数据集合noList写入本地文件
				注意：noList无法直接写入，因为所属类未序列化
				解决：将noList添加到ArrayList集合noList2中
		
	知识点：
		异常处理
			try{可能出现异常的代码}catch(){处理异常的代码}finally{}
		对象流	文件流
		集合的合并		bList.addAll(coll);
		强制类型转换	List<Environment> allList = (List<Environment>)coll;
		截取列表中的一部分	allList.subList(fromIndex, toIndex);//[a,b)

代码优化
	1.输出语句		为日志模块做准备
	2.替换配置信息	为配置模块做准备
		Gather模块
			采集文件路径
		Client模块
			服务器port
			服务器ip
		Server模块
			port
		Backup模块
			备份文件路径

日志模块
	appender	追加
	
配置模块
	document	文档对象
	代码区会将对应类.class文件装入生产了一个字节码对象
	字节码对象包含类的所有信息：
	1.构造器
	2.属性
	3.方法
	driver	类的全包名
	反射
		先获取字节码对象
		然后由字节码对象  创建对象
